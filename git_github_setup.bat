@echo off
chcp 65001 > nul
echo ================================================================
echo           üîß WARTUNGSMANAGER - GIT & GITHUB SETUP üîß
echo ================================================================
echo.

:: Pr√ºfe ob Git installiert ist
where git >nul 2>nul
if %errorlevel% neq 0 (
    echo ‚ùå FEHLER: Git ist nicht installiert!
    echo.
    echo Bitte installiere Git von: https://git-scm.com/download/win
    echo.
    pause
    exit /b 1
)

echo ‚úÖ Git ist installiert
echo.

:: Wechsle ins Projektverzeichnis
cd /d "C:\SoftwareProjekte\WartungsManager"

:: Initialisiere Git Repository
echo üìÅ Initialisiere Git Repository...
git init
echo.

:: Konfiguriere Git (falls noch nicht geschehen)
echo üë§ Konfiguriere Git-Benutzer...
echo.
echo Bitte gib deine GitHub-Daten ein:
set /p GIT_USERNAME="GitHub Benutzername: "
set /p GIT_EMAIL="GitHub E-Mail: "

git config user.name "%GIT_USERNAME%"
git config user.email "%GIT_EMAIL%"
echo.

:: F√ºge alle Dateien hinzu
echo üìù F√ºge Dateien zum Repository hinzu...
git add .
echo.

:: Erstelle ersten Commit
echo üíæ Erstelle initialen Commit...
git commit -m "Initial commit: WartungsManager - Produktionsreifes Flask-basiertes Wartungs- und F√ºllstandsmanagement-System"
echo.

echo ================================================================
echo           üåê GITHUB REPOSITORY EINRICHTUNG üåê
echo ================================================================
echo.
echo N√§chste Schritte:
echo.
echo 1. Gehe zu https://github.com/new
echo 2. Erstelle ein neues Repository mit dem Namen: WartungsManager
echo 3. WICHTIG: W√§hle "Private" oder "Public" nach deinem Wunsch
echo 4. NICHT initialisieren mit README, .gitignore oder License!
echo 5. Kopiere die Repository-URL (z.B. https://github.com/%GIT_USERNAME%/WartungsManager.git)
echo.
echo ----------------------------------------------------------------
echo.
set /p REPO_URL="F√ºge hier die GitHub Repository URL ein: "
echo.

:: F√ºge Remote hinzu
echo üîó Verbinde mit GitHub...
git remote add origin %REPO_URL%
echo.

:: Push zum Repository
echo üöÄ Lade Projekt zu GitHub hoch...
git branch -M main
git push -u origin main

if %errorlevel% equ 0 (
    echo.
    echo ================================================================
    echo                    ‚úÖ ERFOLGREICH! ‚úÖ
    echo ================================================================
    echo.
    echo Dein WartungsManager ist jetzt auf GitHub!
    echo Repository: %REPO_URL%
    echo.
    echo N√ºtzliche Git-Befehle:
    echo - √Ñnderungen anzeigen: git status
    echo - √Ñnderungen hinzuf√ºgen: git add .
    echo - Commit erstellen: git commit -m "Beschreibung"
    echo - Zu GitHub pushen: git push
    echo - Von GitHub pullen: git pull
    echo.
) else (
    echo.
    echo ‚ùå FEHLER beim Upload!
    echo.
    echo M√∂gliche L√∂sungen:
    echo 1. Stelle sicher, dass du bei GitHub angemeldet bist
    echo 2. √úberpr√ºfe die Repository-URL
    echo 3. Versuche: git push -u origin main --force
    echo.
)

pause

Erstellt von Hans Hahn - Alle Rechte vorbehalten
